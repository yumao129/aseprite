name: build  
  
on: [push, pull_request]  
  
jobs:  
  build:  
    runs-on: ${{ matrix.os }}  
    strategy:  
      fail-fast: false  
      matrix:  
        os: [windows-latest]  
        build_type: [Release]  
        enable_ui: [on]  
  
    steps:  
    - uses: actions/checkout@v3  
      with:  
        submodules: 'recursive'  
  
    - name: Set up ccache (Linux only)  
      uses: hendrikmuhs/ccache-action@v1  
      if: runner.os == 'Linux'  
      with:  
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}  
  
    - name: Set up Ninja  
      uses: seanmiddleditch/gha-setup-ninja@master  
  
    - name: Set up MSVC development environment (Windows only)  
      uses: ilammy/msvc-dev-cmd@v1  
      if: runner.os == 'Windows'  
  
    - name: Install Dependencies (Linux only)  
      shell: bash  
      run: |  
        if [[ "${{ runner.os }}" == "Linux" ]]; then  
          sudo apt-get update -qq  
          sudo apt-get install -y libx11-dev libxcursor-dev libxi-dev  
        fi  
  
    - name: Download and Extract Skia  
      shell: bash  
      run: |  
        curl -L https://github.com/some-repo/releases/download/some-version/skia.zip --output skia.zip  
        7z x skia.zip  
  
    - name: Generating Makefiles  
      shell: bash  
      run: |  
        export enable_ccache=${{ matrix.os == 'windows-latest' && 'off' || 'on' }}  
        cmake -S . -B build -G Ninja \  
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \  
          -DENABLE_UI=${{ matrix.enable_ui }} \  
          -DENABLE_CCACHE=$enable_ccache \  
          -DLAF_BACKEND=skia \  
          -DSKIA_DIR=./skia \  
          -DSKIA_LIBRARY_DIR=./skia/some/path \  
          -DSKIA_LIBRARY=./skia/some/path/skia.lib  
  
    - name: Compiling  
      shell: bash  
      run: |  
        cd build && ninja  
  
    - name: Upload Artifact  
      uses: actions/upload-artifact@v3  
      with:  
        name: aseprite  
        path: |  
          ${{ runner.os == 'Windows' && 'build/bin/data' || '' }}  
          ${{ runner.os == 'Windows' && 'build/bin/aseprite.exe' || '' }}
